{"version":3,"file":"commonHelpers.js","sources":["../src/js/books-api.js","../src/js/category-sidebar.js","../src/js/content-home.js"],"sourcesContent":["const BASE_URL = 'https://books-backend.p.goit.global/books';\n\nconst API_OPTIONS = {\n  list: 'category-list',\n  top: 'top-books',\n  category: 'category?category=',\n};\n\nasync function fetchBookList(option, select = '') {\n  try {\n    const response = await fetch(`${BASE_URL}/${option}${select}`);\n    const list = await response.json();\n    console.log(\n      `data retrieving was succesfull: ${response.status} - ${response.statusText}`\n    );\n    return list;\n  } catch (error) {\n    console.log(`An error occurred: ${error.message}`);\n  }\n}\n\nasync function fetchBookById(bookId) {\n  try {\n    const response = await fetch(`${BASE_URL}/${bookId}`);\n    const book = await response.json();\n    console.log(\n      `data retrieving was succesfull: ${response.status} - ${response.statusText}`\n    );\n    return book;\n  } catch (error) {\n    console.log(`An error occurred: ${error.message}`);\n  }\n}\n\nexport default { API_OPTIONS, fetchBookList, fetchBookById };\n","import api from './books-api';\n// import { API_OPTIONS, fetchBookList } from './books-api';\nconst ctgList = document.querySelector('.ctg-list');\n\napi.fetchBookList(api.API_OPTIONS.list).then(response => {\n  const markup = response\n    .map(\n      ({\n        list_name,\n      }) => `<li class=\"ctg-item js-ctg-item\" data-ctg-name = ${list_name}>${list_name}\n          </li>`\n    )\n    .join('');\n\n  ctgList.insertAdjacentHTML('beforeend', markup);\n});\n","import api from './books-api';\nimport markup from './markup';\nimport getRefs from './refs';\n\nconst refs = getRefs();\n\napi.fetchBookList(api.API_OPTIONS.top).then(markup.renderTopBooks);\n\nfunction showSelectedCategoryBooks(evt) {\n  const selectedCategory = evt.target.childNodes[0].data;\n  console.dir(evt.target);\n  console.log(selectedCategory);\n  if (selectedCategory !== 'All categories') {\n    api\n      .fetchBookList(api.API_OPTIONS.category, selectedCategory)\n      .then(markup.renderCategoryBooks);\n  } else {\n    api.fetchBookList(api.API_OPTIONS.top).then(markup.renderTopBooks);\n  }\n}\n\nrefs.ctgList.addEventListener('click', showSelectedCategoryBooks);\n"],"names":["BASE_URL","API_OPTIONS","fetchBookList","option","select","response","list","error","fetchBookById","bookId","book","api","ctgList","markup","list_name","refs","getRefs","showSelectedCategoryBooks","evt","selectedCategory"],"mappings":"gEAAA,MAAMA,EAAW,4CAEXC,EAAc,CAClB,KAAM,gBACN,IAAK,YACL,SAAU,oBACZ,EAEA,eAAeC,EAAcC,EAAQC,EAAS,GAAI,CAChD,GAAI,CACF,MAAMC,EAAW,MAAM,MAAM,GAAGL,KAAYG,IAASC,GAAQ,EACvDE,EAAO,MAAMD,EAAS,OAC5B,eAAQ,IACN,mCAAmCA,EAAS,YAAYA,EAAS,YACvE,EACWC,CACR,OAAQC,EAAP,CACA,QAAQ,IAAI,sBAAsBA,EAAM,SAAS,CAClD,CACH,CAEA,eAAeC,EAAcC,EAAQ,CACnC,GAAI,CACF,MAAMJ,EAAW,MAAM,MAAM,GAAGL,KAAYS,GAAQ,EAC9CC,EAAO,MAAML,EAAS,OAC5B,eAAQ,IACN,mCAAmCA,EAAS,YAAYA,EAAS,YACvE,EACWK,CACR,OAAQH,EAAP,CACA,QAAQ,IAAI,sBAAsBA,EAAM,SAAS,CAClD,CACH,CAEA,MAAAI,EAAe,CAAE,YAAAV,EAAa,cAAAC,EAAe,cAAAM,CAAe,EChCtDI,EAAU,SAAS,cAAc,WAAW,EAElDD,EAAI,cAAcA,EAAI,YAAY,IAAI,EAAE,KAAKN,GAAY,CACvD,MAAMQ,EAASR,EACZ,IACC,CAAC,CACC,UAAAS,CACD,IAAK,oDAAoDA,KAAaA;AAAA,gBAExE,EACA,KAAK,EAAE,EAEVF,EAAQ,mBAAmB,YAAaC,CAAM,CAChD,CAAC,ECXD,MAAME,EAAOC,EAAO,EAEpBL,EAAI,cAAcA,EAAI,YAAY,GAAG,EAAE,KAAKE,EAAO,cAAc,EAEjE,SAASI,EAA0BC,EAAK,CACtC,MAAMC,EAAmBD,EAAI,OAAO,WAAW,GAAG,KAClD,QAAQ,IAAIA,EAAI,MAAM,EACtB,QAAQ,IAAIC,CAAgB,EACxBA,IAAqB,iBACvBR,EACG,cAAcA,EAAI,YAAY,SAAUQ,CAAgB,EACxD,KAAKN,EAAO,mBAAmB,EAElCF,EAAI,cAAcA,EAAI,YAAY,GAAG,EAAE,KAAKE,EAAO,cAAc,CAErE,CAEAE,EAAK,QAAQ,iBAAiB,QAASE,CAAyB"}